{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "BML",
  "patterns": [
    {
      "include": "#body"
    }
  ],
  "repository": {
    "body": {
      "patterns": [
        {
          "include": "#escape"
        },
        {
          "include": "#literalBlock"
        },
        {
          "include": "#eval"
        },
        {
          "include": "#mode"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "commands": {
      "begin": "(?<!\\\\)(\\{)",
      "end": "(\\})",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.bml"
        }
      },
      "endCaptures": {
        "1": {
          "name": "keyword.control.bml"
        }
      },
      "patterns": [
        {
          "include": "#replacer"
        },
        {
          "include": "#callCommand"
        },
        {
          "include": "#match"
        },
        {
          "include": "#useCommand"
        },
        {
          "include": "#number"
        },
        {
          "include": "#comma"
        },
        {
          "include": "#arrow"
        },
        {
          "include": "#choiceName"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "replacer": {
      "name": "punctuation.bml",
      "contentName": "text.markup.bml",
      "begin": "(\\()",
      "end": "(\\))",
      "comment": "Since it's really important to make parens differ from braces, use some arbitrary other common scope name",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.bml"
        }
      },
      "endCaptures": {
        "1": {
          "name": "entity.name.function.bml"
        }
      },
      "patterns": [
        {
          "include": "#body"
        }
      ]
    },
    "eval": {
      "name": "keyword.bml",
      "begin": "(?<!\\\\)(eval)\\s*(\\{)",
      "end": "(\\})",
      "beginCaptures": {
        "1": {
          "name": "keyword.bml"
        },
        "2": {
          "name": "keyword.control.bml"
        }
      },
      "endCaptures": {
        "1": {
          "name": "keyword.control.bml"
        }
      },
      "patterns": [
        {
          "include": "source.js"
        }
      ]
    },
    "callCommand": {
      "name": "keyword.bml",
      "match": "call\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)",
      "captures": {
        "1": {
          "name": "string.bml"
        }
      },
      "patterns": [
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "number": {
      "name": "constant.numeric.bml",
      "match": "(\\d+(\\.\\d+)?)|(\\.\\d+)"
    },
    "comma": {
      "name": "keyword.control.bml",
      "match": ","
    },
    "arrow": {
      "name": "keyword.control.bml",
      "match": "->"
    },
    "choiceName": {
      "name": "string.bml",
      "match": "[@#]?(\\w+):?"
    },
    "useCommand": {
      "name": "keyword.bml",
      "match": "use\\s+(\\w+)",
      "captures": {
        "1": {
          "name": "entity.name.type.bml"
        }
      },
      "patterns": [
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "mode": {
      "begin": "(?<!\\\\)(mode)\\s+(\\w+)\\s*(\\{)",
      "end": "(\\})",
      "beginCaptures": {
        "1": {
          "name": "keyword.bml"
        },
        "2": {
          "name": "entity.name.type.bml"
        },
        "3": {
          "name": "keyword.control.bml"
        }
      },
      "endCaptures": {
        "1": {
          "name": "keyword.control.bml"
        }
      },
      "patterns": [
        {
          "include": "#rule"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "rule": {
      "patterns": [
        {
          "include": "#regexMatcher"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#replacer"
        },
        {
          "include": "#arrow"
        },
        {
          "include": "#comma"
        },
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "regexMatcher": {
      "name": "keyword.control.bml",
      "contentName": "string.regexp.bml",
      "begin": "(/)",
      "end": "(/)",
      "patterns": [
        {
          "match": "\\/"
        }
      ]
    },
    "lineComment": {
      "name": "comment.line.bml",
      "match": "//.*"
    },
    "blockComment": {
      "name": "comment.block.bml",
      "begin": "/\\*",
      "end": "\\*/"
    },
    "literalBlock": {
      "begin": "(?<!\\\\)(\\[\\[)",
      "end": "(?<!\\\\)(\\]\\])",
      "beginCaptures": {
        "1": {
          "name": "keyword.bml"
        }
      },
      "endCaptures": {
        "1": {
          "name": "keyword.bml"
        }
      }
    },
    "match": {
      "name": "keyword.bml",
      "match": "\\bmatch\\b"
    },
    "escape": {
      "name": "keyword.bml",
      "match": "\\\\"
    }
  },
  "scopeName": "source.bml"
}
